{{- if or (or (eq "all" .Values.global.deploymentType) (eq "external" .Values.global.deploymentType) ) (not .Values.global.deploymentType) }}
{{- if eq "s3" .Values.global.inbox.storageType }}
{{- if not .Values.global.vaultSecrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ template "sda.fullname" . }}-auth
type: Opaque
stringData:
  config.yaml: |-
    auth:
    {{- if eq "federated" .Values.global.schemaType }}
      cega:
        authURL: {{ required "C-EGA NSS host is required" .Values.global.cega.host }}
        id: {{ required "C-EGA NSS user is required" .Values.global.cega.user }}
        secret: {{ required "C-EGA NSS password is required" .Values.global.cega.password }}
    {{- end }}
    {{- if .Values.global.auth.corsOrigins }}
      cors:
        credentials: {{ .Values.global.auth.corsCreds }}
        methods: {{ .Values.global.auth.corsMethods }}
        orogins: {{ .Values.global.auth.corsOrigins }}
    {{- end }}
      infotext: {{ .Values.global.auth.infoText }}
      infoURL: {{ .Values.global.auth.infoURL }}
    {{- if .Values.global.auth.resignJwt }}
      jwt:
        issuer: {{ ternary "https://" "http://" .Values.global.tls.enabled}}{{ .Values.global.ingress.hostName.auth }}
        privatekey: "{{ template "jwtPath" . }}/{{ .Values.global.auth.jwtKey }}"
        signaturealg: {{ .Values.global.auth.jwtAlg }}
        tokenttl: {{ .Values.global.auth.jwtTTL }}
    {{- end }}
      publicfile: "{{ template "c4ghPath" . }}/{{ .Values.global.c4gh.publicFile }}"
      resignjwt: {{ .Values.global.auth.resignJwt }}
      s3Inbox: {{ .Values.global.ingress.hostName.s3Inbox }}
    db:
    {{- if .Values.global.tls.enabled }}
      caCert: {{ template "tlsPath" . }}/ca.crt
      clientCert: {{ template "tlsPath" . }}/tls.crt
      clientKey: {{ template "tlsPath" . }}/tls.key
    {{- end }}
      host: {{ .Values.global.db.host }}
      database: {{ .Values.global.db.name }}
      password: {{ required "DB user is required" (include "dbPassAuth" .) }}
      port: {{ .Values.global.db.port }}
      sslmode: {{ ternary .Values.global.db.sslMode "disable" .Values.global.tls.enabled }}
      user: {{ required "DB user is required" (include "dbUserAuth" .) }}
    log:
      format: {{ .Values.global.log.format }}
      level: {{ .Values.global.log.level }}
    {{- if and (ne "" .Values.global.oidc.id) (ne "" .Values.global.oidc.secret) }}
    oidc:
      id: {{ .Values.global.oidc.id }}
      jwkPath: {{ .Values.global.oidc.jwkPath }}
      provider: {{ .Values.global.oidc.provider }}
      redirectURL: {{ template "authRedirect" .}}
      secret: {{ .Values.global.oidc.secret }}
    {{- end }}
    {{- if .Values.global.tls.enabled}}
    server:
      cert: {{ template "tlsPath" . }}/tls.crt
      key: {{ template "tlsPath" . }}/tls.key
    {{- end }}
{{- end }}
{{- end }}
{{- end }}
